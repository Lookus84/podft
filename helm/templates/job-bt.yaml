{{- range $image, $imageData := .Values.bt }}
{{- include "job.bt" (list $ $image $imageData) }}
{{- end }}

{{- define "job.bt" -}}
{{- $params := (index . 0) }}
{{- $name := (index . 1) }}
{{- $sourceBtImg := (index . 2) }}
---
kind: Job
apiVersion: batch/v1
metadata:
  name: {{ include "bt.fullName" (list $params $sourceBtImg) }}
  labels:
    app: {{ include "bt.name" (list $params $sourceBtImg) }}
    wave: {{ $sourceBtImg.startWave | quote }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade,pre-rollback"
    "helm.sh/hook-weight": "2"
    "helm.sh/resource-policy": "keep"
spec:
  parallelism: 1
  backoffLimit: 0
  template:
    metadata:
      {{- include "annotations.add" (list $params "job" "") | indent 6 }}
      labels:
        job-name: {{ include "bt.fullName" (list $params $sourceBtImg) }}
        name: {{ include "bt.fullName" (list $params $sourceBtImg) }}
    spec:
      volumes:
        {{- include "vol.def" (list $params "job") | indent 8}}
      {{- if $params.Values.initContainers }}
      initContainers:
      {{-   range $params.Values.initContainers }}
      {{-     if contains "devopsutils" .image.repository }}
      {{-      include "init.container.body" (list $params . "job-init-cont") | indent 8 }} 
      {{-     end }}
      {{-   end }}
      {{- end }}
      containers:
        - name: {{ include "bt.fullName" (list $params $sourceBtImg) }}
          securityContext:
            {{- toYaml $params.Values.securityContext | nindent 12 }}
          image: {{ include "bt.image" (list $params $sourceBtImg) | quote }}
          command:
            - /bin/sh
          args:
            - '-c'
            - '
              {{- if $params.Values.vault.enabled }}
              if [ -d "/vault/secrets/" ] && [ -n "$(ls -A "/vault/secrets/")" ]; then for f in /vault/secrets/*;  do source $f; done; fi;
              {{- end }}
              if [ -f "/share/scripts/verchecker" ]; then mv /share/scripts/verchecker /share/verchecker; chmod 777 /share/verchecker; fi; if [ -f /share/scripts/init-broker-topics.sh ]; then /share/scripts/init-broker-topics.sh; else echo "There is no /share/scripts/init-broker-topics.sh. Update the devopsutils image!"; exit 1; fi;
              '
          {{- with $params.Values.environmentsFrom }}
          envFrom:
            {{- include "envFrom.add" (list $params.Values (include "bt.fullModuleName" (list $params $sourceBtImg)) "job-main-cont") | indent 12 }}
          {{- end }}
          {{- with $params.Values.environments }}
          env:
            {{- include "env.add" (list $params.Values "job-main-cont") | indent 12 }}
          {{- end }}
      {{- with $params.Values.resources.bt }}
          resources:
            {{- toYaml $params.Values.resources.bt | nindent 12 }}
      {{- end }}
          volumeMounts:
            {{- include "vol.mount" (list $params "job-main-cont") | indent 12}}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: {{ include "bt.pullPolicy" (list $params $sourceBtImg) }}
      restartPolicy: Never
      securityContext: 
      {{- toYaml $params.Values.podSecurityContext | nindent 8 }}
      {{- with $params.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $params.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $params.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $params.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}